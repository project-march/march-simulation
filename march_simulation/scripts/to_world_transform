#! /usr/bin/env python

import rospy
import tf2_ros
from geometry_msgs.msg import TransformStamped
from gazebo_msgs.srv import GetModelState, GetModelStateRequest

rospy.init_node('to_world_transform', anonymous=True)
tf_broadcaster = tf2_ros.TransformBroadcaster()
transform = TransformStamped()

transform.header.frame_id = 'world'
transform.child_frame_id = 'base_link'



if rospy.get_param('/march/fixed', True):
    # create static transform
    rospy.logwarn("fixed")

    #transform.transform.translation = pose.position
    #transform.transform.rotation = result.pose.orientation

    tf_broadcaster.sendTransform(transform)

else:
    rospy.wait_for_service('/gazebo/get_model_state')
    get_model_srv = rospy.ServiceProxy('/gazebo/get_model_state', GetModelState)

    model = GetModelStateRequest()
    model.model_name = 'march'
    rate = rospy.Rate(10)

    while not rospy.is_shutdown():
        rate.sleep()

        result = get_model_srv(model)
        transform.header.stamp = rospy.Time.now()
        transform.transform.translation = result.pose.position
        transform.transform.rotation = result.pose.orientation

        tf_broadcaster.sendTransform(transform)
